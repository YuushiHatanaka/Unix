//==============================================================================
// PeriodThreadクラスヘッダ
//==============================================================================
#ifndef _PERIOD_THREAD_H_                   // 二重インクルード防止
#define _PERIOD_THREAD_H_                   // 二重インクルード防止

//==============================================================================
// インクルードファイル
//==============================================================================
#include "Thread.h"

//==============================================================================
// 型定義
//==============================================================================
typedef void (*EventCallBak)(void*);        // イベントコールバック関数

//==============================================================================
// クラス定義
//==============================================================================
//------------------------------------------------------------------------------
// PeriodThreadクラス
//------------------------------------------------------------------------------
class PeriodThread : public Thread
{
private:
    uint64_t m_periodTimer;                 // 周期タイマー(msec)

private:
    //--------------------------------------------------------------------------
    // 実行
    //--------------------------------------------------------------------------
    virtual void Execute()
    {
        // 無限ループ
        while(true)
        {
            // キャンセルポイント設定
            pthread_testcancel();

            // 周期動作のためsleep(msec)
            usleep(this->m_periodTimer * 1000);

            // イベント呼出し
            this->Event();
        }
    }

    //--------------------------------------------------------------------------
    // クリーンナップ
    //--------------------------------------------------------------------------
    virtual void Cleanup()
    {
    }

    //--------------------------------------------------------------------------
    // イベント
    //--------------------------------------------------------------------------
    virtual void Event()
    {
    }

public:
    //--------------------------------------------------------------------------
    // コンストラクタ
    //--------------------------------------------------------------------------
    PeriodThread() : Thread()
    {
        // 初期化
        this->m_periodTimer = 100;
    }

    //--------------------------------------------------------------------------
    // コンストラクタ
    //--------------------------------------------------------------------------
    PeriodThread(std::string name) : Thread(name)
    {
        // 初期化
        this->m_periodTimer = 100;
    }

    //--------------------------------------------------------------------------
    // コンストラクタ
    //--------------------------------------------------------------------------
    PeriodThread(std::string name, uint64_t timer) : Thread(name)
    {
        // 初期化
        this->m_periodTimer = timer;
    }

    //--------------------------------------------------------------------------
    // コピーコンストラクタ
    //--------------------------------------------------------------------------
    PeriodThread(PeriodThread& thread) : Thread(thread)
    {
        // 初期設定
        this->m_periodTimer = thread.m_periodTimer;
    }

    //--------------------------------------------------------------------------
    // デストラクタ
    //--------------------------------------------------------------------------
    ~PeriodThread()
    {
    }
};
#endif                                      // 二重インクルード防止
