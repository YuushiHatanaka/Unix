//==============================================================================
// Exceptionクラスヘッダ
//==============================================================================
#ifndef _EXCEPTION_H_                       // 二重インクルード防止
#define _EXCEPTION_H_                       // 二重インクルード防止

//==============================================================================
// インクルードファイル
//==============================================================================
#include <string.h>
#include <errno.h>
#include <stdarg.h>
#include <string>
#include <iostream>
#include <sstream>

//==============================================================================
// 定数定義
//==============================================================================
#define EXCEPTION_MESSAGE_MAX  (8192)       // 例外メッセージ文字列長

//==============================================================================
// クラス定義
//==============================================================================
//------------------------------------------------------------------------------
// Exceptionクラス
//------------------------------------------------------------------------------
class Exception
{
public:
    std::string Msg;                        // メッセージ

protected :
    //--------------------------------------------------------------------------
    // メッセージ設定
    //--------------------------------------------------------------------------
    void SetMessage(std::string format, va_list arg)
    {
        // メッセージオブジェクト
        std::stringstream _message;

        // メッセージ生成
        char _buffer[EXCEPTION_MESSAGE_MAX+1];
        memset( _buffer, 0x00, sizeof(_buffer) );
        vsnprintf(_buffer, sizeof(_buffer), format.c_str(), arg);
        _message << _buffer << "\n";

        // メッセージ設定
        this->Msg = _message.str();
    }

public:
    //--------------------------------------------------------------------------
    // コンストラクタ
    //--------------------------------------------------------------------------
    Exception()
    {
        // メッセージ設定
        this->Msg = strerror(errno);
    }

    //--------------------------------------------------------------------------
    // コンストラクタ
    //--------------------------------------------------------------------------
    Exception(const Exception& ex)
    {
        // メッセージ設定
        this->Msg = ex.Msg;
    }

    //--------------------------------------------------------------------------
    // コンストラクタ
    //--------------------------------------------------------------------------
    Exception(std::string format, va_list arg)
    {
    }

    //--------------------------------------------------------------------------
    // コンストラクタ
    //--------------------------------------------------------------------------
    Exception(std::string format, ...)
    {
        // メッセージ生成
        va_list ap;
        va_start(ap, format);
        this->SetMessage(format, ap);
        va_end(ap);
    }

    //--------------------------------------------------------------------------
    // コンストラクタ
    //--------------------------------------------------------------------------
    Exception(int no)
    {
        // メッセージ設定
        this->Msg = strerror(no);
    }
};
#endif                                      // 二重インクルード防止
