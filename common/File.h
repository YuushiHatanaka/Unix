//==============================================================================
// Fileクラスヘッダ
//==============================================================================
#ifndef _FILE_H_                            // 二重インクルード防止
#define _FILE_H_                            // 二重インクルード防止

//==============================================================================
// インクルードファイル
//==============================================================================
#include <string>
#include <sys/stat.h>

//==============================================================================
// クラス定義
//==============================================================================
//------------------------------------------------------------------------------
// Fileクラス
//------------------------------------------------------------------------------
class File
{
protected :
    std::string m_name;                     // ファイル名

public:
    //-----------------------------------------------------------------------------
    // コンストラクタ
    //-----------------------------------------------------------------------------
    File(std::string filename)
    {
        // 初期化
        this->m_name = filename;
    }

    //-----------------------------------------------------------------------------
    // コピーコンストラクタ
    //-----------------------------------------------------------------------------
    File(File& file)
    {
        // 初期化
        this->m_name = file.m_name;
    }

    //-------------------------------------------------------------------------
    // ファイル存在判定関数
    //-------------------------------------------------------------------------
    bool Exist()
    {
        struct stat _stat;                  // ファイル情報

        // ファイル存在判定
        if( stat(this->m_name.c_str(),&_stat) != 0 )
        {
            // ファイルは存在していない
            return false;
        }

        // ファイルは存在している
        return true;
    }
};
#endif                                      // 二重インクルード防止
